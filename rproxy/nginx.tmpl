{{ $CurrentContainer := where $ "ID" .Docker.CurrentContainerID | first }}


{{ range $host, $containers := groupBy $ "Env.VIRTUAL_HOST" }}
upstream {{ $host }}.%DOMAIN% {

{{ range $container := $containers }}

   {{ $addrLen := len $container.Addresses }}

      {{ range $knownNetwork := $CurrentContainer.Networks }}
      	 {{ range $containerNetwork := $container.Networks }}
	    {{ if (or (eq $knownNetwork.Name $containerNetwork.Name) (eq $knownNetwork.Name "host")) }}

	       {{/* If only 1 port exposed, use it */}}
	       {{ if eq $addrLen 1 }}
	       	  {{ $address := index $container.Addresses 0 }}
    server {{ $containerNetwork.IP }}:{{ $address.Port }};
	       {{/* If more than one port exposed, use the one matching VIRTUAL_PORT */}}
	       {{ else }}
	       	  {{ $port := $container.Env.VIRTUAL_PORT }}
		  {{ $address := where $container.Addresses "Port" $port | first }}
    server {{ $containerNetwork.IP }}:{{ $address.Port }};
		{{ end }}
	    {{ else }}
    # Cannot connect to network of this container
    server 127.0.0.1 down;
	    {{ end }}
	{{ end }}
   {{ end }}
{{ end }}
}

server {
    server_name {{ $host }}.%DOMAIN%;
    location / {
        proxy_pass http://{{ $host }}.%DOMAIN%/;
    }
}
{{ end }}
