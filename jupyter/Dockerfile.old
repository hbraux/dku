# A Python3 miniconda environment with Jupyter server

FROM alpine-glibc

# can be overriden to a local http cache
ARG SITE_DOWNLOAD=""

ARG CONDA_PACKAGES=jupyter,pandas,scikit-learn,matplotlib,plotly

ARG CONDA_FORGE_PACKAGES=python-avro

ENV LANG C.UTF-8

# Notebook version
ENV JUPYTER_VERSION 5.6
ENV CONDA_VERSION 4.5.4

# Server Name and Port (used by reverse proxy to expose UI)
ENV VIRTUAL_HOST jupyter
ENV VIRTUAL_PORT 8888

LABEL Description="Conda/Jupyter Server $JUPYTER_VERSION"
LABEL Usage="docker run -d --name=${VIRTUAL_HOST} --network=udn --mount source=jupyter,target=/data -p ${VIRTUAL_PORT} jupyter"

ENV PATH /opt/conda/bin:$PATH

# install miniconda
RUN set -x  \    
    && echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \
    && curl -s ${SITE_DOWNLOAD:-https://repo.anaconda.com}/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh -o ~/miniconda.sh \
    && /bin/bash ~/miniconda.sh -b -p /opt/conda \
    && rm ~/miniconda.sh 

# install packages
RUN set -x  \
    && conda config --add channels ${SITE_DOWNLOAD:-https://repo.anaconda.com}/pkgs/main \
    && conda update --yes --name base conda \
    && conda install --yes ${CONDA_PACKAGES//,/ } \
    && adduser -D -h /data -s /bin/bash jupyter 

# RUN conda config --add channels ${SITE_DOWNLOAD:-https://conda.anaconda.org}/conda-forge && conda install --yes ${CONDA_FORGE_PACKAGES//,/ } 

COPY entrypoint.sh /

USER jupyter

WORKDIR /data

EXPOSE ${VIRTUAL_PORT}

VOLUME /data

ENTRYPOINT ["/entrypoint.sh"]

CMD ["start"]

